package cc.youchain.integration.demos;

import cc.youchain.abi.FunctionEncoder;
import cc.youchain.abi.datatypes.Utf8String;
import cc.youchain.abi.datatypes.generated.Uint256;
import cc.youchain.crypto.Credentials;
import cc.youchain.crypto.RawTransaction;
import cc.youchain.crypto.TransactionEncoder;
import cc.youchain.protocol.YOUChain;
import cc.youchain.protocol.core.DefaultBlockParameterName;
import cc.youchain.protocol.core.methods.response.TransactionReceipt;
import cc.youchain.protocol.core.methods.response.YOUSendTransaction;
import cc.youchain.protocol.http.HttpService;
import cc.youchain.tx.Contract;
import cc.youchain.tx.gas.StaticGasProvider;
import cc.youchain.utils.Numeric;
import org.junit.Assert;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.math.BigInteger;
import java.util.Arrays;

public class TransERC20ContractDemos {

    private static final Logger log = LoggerFactory.getLogger(TransERC20ContractDemos.class);
    private static String nodeUrl = "http://localhost:8283/";
    private static HttpService httpService = new HttpService(nodeUrl);
    private static YOUChain youChain = YOUChain.build(httpService);

    private static final String contractBinary = "60806040526012600260006101000a81548160ff021916908360ff160217905550348" +
            "0156200002e5760006000fd5b506040516200156c3803806200156c83398181016040526060811015620000555760006000fd5b810" +
            "190808051906020019092919080516040519392919084640100000000821115620000815760006000fd5b838201915060208201858" +
            "11115620000995760006000fd5b8251866001820283011164010000000082111715620000b85760006000fd5b80835260208301925" +
            "05050908051906020019080838360005b83811015620000ef5780820151818401525b602081019050620000d1565b5050505090509" +
            "0810190601f1680156200011d5780820380516001836020036101000a031916815260200191505b506040526020018051604051939" +
            "2919084640100000000821115620001425760006000fd5b838201915060208201858111156200015a5760006000fd5b82518660018" +
            "20283011164010000000082111715620001795760006000fd5b8083526020830192505050908051906020019080838360005b83811" +
            "015620001b05780820151818401525b60208101905062000192565b50505050905090810190601f168015620001de5780820380516" +
            "001836020036101000a031916815260200191505b506040526020015050505b600260009054906101000a900460ff1660ff16600a0" +
            "a83026003600050819090905550600360005054600460005060003373ffffffffffffffffffffffffffffffffffffffff1673fffff" +
            "fffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555081600060005090805190602" +
            "00190620002789291906200029f565b508060016000509080519060200190620002949291906200029f565b505b5050506200035a5" +
            "65b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002e25780516" +
            "0ff191683800117855562000318565b8280016001018555821562000318579182015b8281111562000317578251826000509090559" +
            "1602001919060010190620002f5565b5b5090506200032791906200032b565b5090565b62000357919062000337565b80821115620" +
            "00353576000818150600090555060010162000337565b5090565b90565b611202806200036a6000396000f3fe60806040523480156" +
            "100115760006000fd5b50600436106100b95760003560e01c806370a082311161007257806370a08231146102ba57806379cc67901" +
            "461031357806395d89b411461037a578063a9059cbb146103fe578063cae9ca5114610465578063dd62ed3e1461056a576100b9565" +
            "b806306fdde03146100bf578063095ea7b31461014357806318160ddd146101aa57806323b872dd146101c8578063313ce56714610" +
            "24f57806342966c6814610273576100b9565b60006000fd5b6100c76105e3565b60405180806020018281038252838181518152602" +
            "00191508051906020019080838360005b838110156101085780820151818401525b6020810190506100ec565b50505050905090810" +
            "190601f1680156101355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019" +
            "06004803603604081101561015a5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019" +
            "092919080359060200190929190505050610684565b604051808215151515815260200191505060405180910390f35b6101b261072" +
            "1565b6040518082815260200191505060405180910390f35b610235600480360360608110156101df5760006000fd5b81019080803" +
            "573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573fffffffffffffffffffffffffffffffffffffff" +
            "f1690602001909291908035906020019092919050505061072a565b604051808215151515815260200191505060405180910390f35" +
            "b610257610876565b604051808260ff1660ff16815260200191505060405180910390f35b6102a06004803603602081101561028a5" +
            "760006000fd5b8101908080359060200190929190505050610889565b604051808215151515815260200191505060405180910390f" +
            "35b6102fd600480360360208110156102d15760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169" +
            "0602001909291905050506109a4565b6040518082815260200191505060405180910390f35b6103606004803603604081101561032" +
            "a5760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919" +
            "05050506109bf565b604051808215151515815260200191505060405180910390f35b610382610c04565b604051808060200182810" +
            "3825283818151815260200191508051906020019080838360005b838110156103c35780820151818401525b6020810190506103a75" +
            "65b50505050905090810190601f1680156103f05780820380516001836020036101000a031916815260200191505b5092505050604" +
            "05180910390f35b61044b600480360360408110156104155760006000fd5b81019080803573fffffffffffffffffffffffffffffff" +
            "fffffffff16906020019092919080359060200190929190505050610ca5565b6040518082151515158152602001915050604051809" +
            "10390f35b6105506004803603606081101561047c5760006000fd5b81019080803573fffffffffffffffffffffffffffffffffffff" +
            "fff16906020019092919080359060200190929190803590602001906401000000008111156104c45760006000fd5b8201836020820" +
            "111156104d75760006000fd5b803590602001918460018302840111640100000000831117156104fa5760006000fd5b91908080601" +
            "f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508" +
            "083019250505050505050909091929090919290505050610cc7565b604051808215151515815260200191505060405180910390f35" +
            "b6105cd600480360360408110156105815760006000fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906" +
            "0200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e39565b6040518082815" +
            "260200191505060405180910390f35b60006000508054600181600116156101000203166002900480601f016020809104026020016" +
            "04051908101604052809291908181526020018280546001816001161561010002031660029004801561067c5780601f10610651576" +
            "1010080835404028352916020019161067c565b820191906000526020600020905b81548152906001019060200180831161065f578" +
            "29003601f168201915b505050505081565b600081600560005060003373ffffffffffffffffffffffffffffffffffffffff1673fff" +
            "fffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008573fffffffffffffffffffffffff" +
            "fffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081909090555" +
            "06001905061071b565b92915050565b60036000505481565b6000600560005060008573fffffffffffffffffffffffffffffffffff" +
            "fffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060003373fffffffffffff" +
            "fffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005" +
            "05482111515156107c15760006000fd5b81600560005060008673ffffffffffffffffffffffffffffffffffffffff1673fffffffff" +
            "fffffffffffffffffffffffffffffff16815260200190815260200160002060005060003373fffffffffffffffffffffffffffffff" +
            "fffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054039250508" +
            "19090905550610866848484610e6463ffffffff16565b6001905061086f565b9392505050565b600260009054906101000a900460f" +
            "f1681565b600081600460005060003373ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffffffffffffff" +
            "fffffffffff16815260200190815260200160002060005054101515156108e05760006000fd5b81600460005060003373fffffffff" +
            "fffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206" +
            "00082828250540392505081909090555081600360008282825054039250508190909055503373fffffffffffffffffffffffffffff" +
            "fffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505" +
            "060405180910390a26001905061099f565b919050565b60046000506020528060005260406000206000915090505481565b6000816" +
            "00460005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815" +
            "26020019081526020016000206000505410151515610a165760006000fd5b600560005060008473fffffffffffffffffffffffffff" +
            "fffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060003373fffff" +
            "fffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600" +
            "020600050548211151515610aab5760006000fd5b81600460005060008573ffffffffffffffffffffffffffffffffffffffff1673f" +
            "fffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828282505403925050819090905550816" +
            "00560005060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815" +
            "260200190815260200160002060005060003373ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffffffff" +
            "fffffffffffffffff16815260200190815260200160002060008282825054039250508190909055508160036000828282505403925" +
            "0508190909055508273ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc18441" +
            "2cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a260019050610bfe565b92915050565b60016000508" +
            "054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805" +
            "460018160011615610100020316600290048015610c9d5780601f10610c7257610100808354040283529160200191610c9d565b820" +
            "191906000526020600020905b815481529060010190602001808311610c8057829003601f168201915b505050505081565b6000610" +
            "cb8338484610e6463ffffffff16565b60019050610cc1565b92915050565b60006000849050610cde858561068463ffffffff16565" +
            "b15610e30578073ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338630876040518563ffffffff1660e01b81526" +
            "00401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200" +
            "18481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815" +
            "260200180602001828103825283818151815260200191508051906020019080838360005b83811015610dbd5780820151818401525" +
            "b602081019050610da1565b50505050905090810190601f168015610dea5780820380516001836020036101000a031916815260200" +
            "191505b5095505050505050600060405180830381600087803b158015610e0d5760006000fd5b505af1158015610e22573d6000600" +
            "03e3d6000fd5b505050506001915050610e32565b505b9392505050565b60056000506020528160005260406000206000506020528" +
            "06000526040600020600091509150505481565b600073ffffffffffffffffffffffffffffffffffffffff168273fffffffffffffff" +
            "fffffffffffffffffffffffff1614151515610ea15760006000fd5b80600460005060008573fffffffffffffffffffffffffffffff" +
            "fffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505410151515610ef65" +
            "760006000fd5b600460005060008373ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffffffffffffffff" +
            "fffffffff1681526020019081526020016000206000505481600460005060008573fffffffffffffffffffffffffffffffffffffff" +
            "f1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505401111515610f91576000600" +
            "0fd5b6000600460005060008473ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffffffffffffffffffff" +
            "fffff16815260200190815260200160002060005054600460005060008673ffffffffffffffffffffffffffffffffffffffff1673f" +
            "fffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505401905081600460005060008673fff" +
            "fffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016" +
            "00020600082828250540392505081909090555081600460005060008573ffffffffffffffffffffffffffffffffffffffff1673fff" +
            "fffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054019250508190909055508273f" +
            "fffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b6" +
            "9c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3806004600050600" +
            "08573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815" +
            "260200160002060005054600460005060008773ffffffffffffffffffffffffffffffffffffffff1673fffffffffffffffffffffff" +
            "fffffffffffffffff16815260200190815260200160002060005054011415156111c657fe5b505b50505056fea265627a7a7231582" +
            "055a6ccf33b2e62c69a8e6308efa0e5de6bb3bf60246100cc13e392acc2c550c464736f6c634300050b0032";

    private static final String contractAddress = "0x2f9481e4a8398ae29fbc30783c0ee1ab1b8ea226";

    /**
     * 创建ERC20合约
     */
    @Test
    public void createERC20ContractDemo() throws Exception {
        String fromUserPrivateKey = "PrivateKey";
        Credentials credential = Credentials.create(fromUserPrivateKey);
        String from = credential.getAddress();
        log.info("from_address={}", from);
        BigInteger nonce = youChain.youGetTransactionCount(from, DefaultBlockParameterName.PENDING).send().getTransactionCount();
        BigInteger totalSupply = BigInteger.valueOf(10000);
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.asList(new Uint256(totalSupply),
                new Utf8String("Test ERC Token"), new Utf8String("TECT")));
        log.info("encodedConstructor={}", encodedConstructor);
        BigInteger gasPrice = youChain.youGasPrice().send().getGasPrice();
        RawTransaction rawTransaction = RawTransaction.createContractTransaction(nonce, gasPrice,
                Contract.GAS_LIMIT, BigInteger.ZERO, "0x" + contractBinary + encodedConstructor);
        // 签名交易数据
        byte[] signMessage = TransactionEncoder.signMessage(rawTransaction, credential);
        String signedTransactionData = Numeric.toHexString(signMessage);
        YOUSendTransaction youSendTransaction = youChain.youSendRawTransaction(signedTransactionData).send();
        log.info("transaction hash is {}", youSendTransaction.getTransactionHash());
        Thread.sleep(10000); // sleep10秒等交易确认
        TransactionReceipt transactionReceipt = youChain.youGetTransactionReceipt(youSendTransaction.getTransactionHash()).send().getResult();
//        log.info("transaction receipt={}", JSONUtil.toJsonStr(transactionReceipt));
        log.info("contract address is {}", transactionReceipt.getContractAddress());
    }

    @Test
    public void testIsValid() throws IOException {
        String fromUserPrivateKey = "PrivateKey";
        Credentials credential = Credentials.create(fromUserPrivateKey);
        StaticGasProvider gasProvider = new StaticGasProvider(BigInteger.TEN, BigInteger.ONE);
        TestDemoContract testDemoContract = new TestDemoContract(contractBinary, contractAddress, youChain, credential, gasProvider);
        Assert.assertTrue(testDemoContract.isValid());
    }


}
